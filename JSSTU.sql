DROP TABLE JSSTU;
--JSSTU테이블 삭제
--초기화 하기위해 삭제하고 입력
CREATE TABLE JSSTU(
    STUNO NUMBER(4),
    STUNAME NVARCHAR2(5),
    STUAGE NUMBER(2),
    STUPHONE NVARCHAR2(4),
    STUBIRTH DATE,
    GROUPNO NUMBER(2),
    CONSTRAINT JSSTU_PK PRIMARY KEY(STUNO)--제약조건 PK(나중에 배울예정//기본키)
);

DELETE FROM JSSTU;
--JSSTU테이블에 있는 모든 데이터 삭제
INSERT INTO JSSTU VALUES (6301, '강지수', 27, '9128', '19940427', 5 ); 
INSERT INTO JSSTU VALUES (6302, '구민성', 24, '0278', '19971002', 1 ); 
INSERT INTO JSSTU VALUES (6304, '김도연', 26, '3510', '19950309', 4 );
INSERT INTO JSSTU VALUES (6305, '김상민', 25, '9532', '19960516', 1 );
INSERT INTO JSSTU VALUES (6306, '김성진', 26, '2883', '19950410', 1 );
INSERT INTO JSSTU VALUES (6307, '김태석', 24, '2883', '19970711', 3 );
INSERT INTO JSSTU VALUES (6308, '김혁', 24, '0892', '19970301', 1 );
INSERT INTO JSSTU VALUES (6310, '서민재', 24, '7954', '19970128', 6 );
INSERT INTO JSSTU VALUES (6312, '신희태', 26, '3756', '19951128', 4 );
INSERT INTO JSSTU VALUES (6313, '안재현', 23, '5667', '19980106', 2 );
INSERT INTO JSSTU VALUES (6315, '양준희', 21, '9401', '20000309', 2 );
INSERT INTO JSSTU VALUES (6316, '오은희', 20, '0255', '20010519', 3 );
INSERT INTO JSSTU VALUES (6317, '오형록', 26, '5446', '19950422', 6 );
INSERT INTO JSSTU VALUES (6318, '유제상', 27, '8896', '19941204', 5 );
INSERT INTO JSSTU VALUES (6319, '유현서', 26, '4452', '19950111', 6 );
INSERT INTO JSSTU VALUES (6320, '윤희영', 26, '2639', '19950917', 3 );
INSERT INTO JSSTU VALUES (6321, '이소현', 28, '5960', '19930529', 4 );
INSERT INTO JSSTU VALUES (6323, '이유진', 30, '3288', '19910121', 4 );
INSERT INTO JSSTU VALUES (6324, '이은솔', 25, '5975', '19960618', 5 );
INSERT INTO JSSTU VALUES (6325, '이은지', 23, '7691', '19980728', 2 );
INSERT INTO JSSTU VALUES (6326, '이재홍', 29, '5859', '19920211', 6 );
INSERT INTO JSSTU VALUES (6327, '임형민', 24, '9743', '19970403', 3 );
INSERT INTO JSSTU VALUES (6328, '차호정', 23, '2837', '19980328', 5 );
INSERT INTO JSSTU VALUES (6329, '최동선', 28, '5112', '19931113', 2 );


SELECT* FROM JSSTU;

--(1)테이블 구성 살펴보기
    DESC JSSTU;

--(2)ALIAS(별칭)으로 조회하기
   -- 조회: 학생번호,학생이름,학생나이, 전화번호, 생년월일, 조
   
SELECT  STUNO AS 학생번호, STUNAME AS 학생이름, STUAGE AS 학생나이, 
STUPHONE AS 전화번호 ,STUBIRTH AS 생년월일, GROUPNO AS 조
FROM JSSTU;

--(3)중복 데이터를 제거 DISTINCT
--GROUPNO만 검색
SELECT GROUPNO FROM JSSTU;
--중복 제거
SELECT DISTINCT GROUPNO FROM JSSTU;
--나이만 검색
SELECT STUAGE FROM JSSTU;
--중복나이제거
SELECT DISTINCT STUAGE FROM JSSTU;

--(4)정렬하기
--1)오름차순 ASC.
--2)내림차순 DESC.
SELECT DISTINCT GROUPNO FROM JSSTU
ORDER BY GROUPNO ASC;--올림차순

SELECT DISTINCT GROUPNO FROM JSSTU
ORDER BY GROUPNO DESC;--내림차순

SELECT STUBIRTH FROM JSSTU
ORDER BY STUBIRTH ASC;-- 생년월일 오름차순 정렬

SELECT STUNAME FROM JSSTU
ORDER BY STUNAME DESC;--이름 내림차순 정렬

--EX1) 2조인 사람들 검색
SELECT *FROM JSSTU 
WHERE GROUPNO= 2;
--EX2) 우리조원들  이름검색
SELECT *FROM JSSTU 
WHERE GROUPNO= 4;
--EX3) 우리조원들의 학생번호 검색
SELECT STUNAME AS 이름, STUNO AS 학생번호
FROM JSSTU WHERE GROUPNO = 4;
--EX4) 우리조원들중 어린순서대로 검색
SELECT * FROM JSSTU
WHERE GROUPNO =5
ORDER BY STUBIRTH DESC;

--(6) 두가지 이상 조건 검색
--1)AND : 조건식 1과 조건식 2 모두 참일 때 TRUE, 하나라도 거짓이면 FALSE
--2)OR : 조건식 1과 조건식 2 모두 거짓일 때 FALSE, 하나라도 참이면 TRUE

--EX) 나이가 25살 이면서 1조 인사람 
SELECT *FROM JSSTU 
WHERE STUAGE =25 AND
GROUPNO =1;
--EX2) 나이가 25살 또는 25살인 학생과 5조인 학생을 조회
SELECT *FROM JSSTU

WHERE STUAGE =25 OR STUAGE =26 
OR GROUPNO =5;

--(7) 산술연산, 문자연산
SELECT *
FROM JSSTU
WHERE STUAGE >=26;

SELECT *
FROM JSSTU
WHERE STUNAME >='김'AND STUNAME<='이';--김씨부터 이씨전까지 
-- 1조 , 3조, 5조인 학생 조회
SELECT *
FROM JSSTU
WHERE GROUPNO=1 OR GROUPNO=3 OR GROUPNO=5;

--(8) IN 연산자
--같은 컬럼에서 여러가지 조건검색
SELECT*
FROM JSSTU
WHERE GROUPNO IN (1,3,5);

--1,3,5 조가 아닌학생 검색
SELECT*
FROM JSSTU
WHERE GROUPNO NOT IN (1,3,5);

--나이가 23이상 25이하 인 학생 조회
SELECT*
FROM JSSTU
WHERE STUAGE >=23 AND STUAGE <=25;

--(9)BTWEEN A AND B
--A 부터 B사이의 데이터를 검색
/*
    SELECT *
    FROM [TABLE_NAME]
    WHERE [COL_NAME] BETWEEN 최솟값 AND 최댓값;

*/
SELECT *
FROM JSSTU
WHERE STUAGE BETWEEN 23 AND 25;

--22살에서 26 사이가 아닌 학생 조회
SELECT*
FROM JSSTU
WHERE STUAGE NOT BETWEEN 22 AND 26;

--(10) LIKE,와일드 카드
/*
SELECT *
FROM WHERE [COL_NAME] LIKE(...);
*/

--첫글자가 '김'으로 시작하는 데이터 조회
SELECT * 
FROM JSSTU
WHERE STUNAME LIKE '김%';

--두번째 글자가 '희' 로 시작하는 데이터 조회 
SELECT *
FROM JSSTU
WHERE STUNAME LIKE '_희%';

--세번째 글자가 '재' 로 시작하는 데이터 조회
SELECT *
FROM JSSTU
WHERE STUNAME LIKE '__재%';

--'이' 글자를 포함하는 모든 데이터 조회
SELECT *
FROM JSSTU
WHERE STUNAME LIKE '%이%';

--'은' 글자를 포함하는 모든 데이터 조회
SELECT *
FROM JSSTU
WHERE STUNAME LIKE '%은%'; 

/*
와일드 카드
_ : 어떤 값이든 상관없이 한개의 문자 데이터를 의미
%: 길이랑 상관없이 (문자 없는경우도 포함) 모든 문자 데이터를 의미

--이름의 성이 김,이, 박,최가 아닌 사람을 조회
*/
SELECT *
FROM JSSTU
 WHERE STUNAME NOT LIKE '김%' AND STUNAME NOT LIKE '박%';
 
 --(11) IS NULL /IS NOT NULL
 --새로운 테이블 추가, 결혼한사람은 1 아닌 사람은 0으로
 ALTER TABLE JSSTU ADD MERRY NUMBER(1);
 
 SELECT * FROM JSSTU;
 UPDATE JSSTU
 SET MERRY =1 --MERRY를 1로 바꿔라
 WHERE STUNAME='이유진';
 
 UPDATE JSSTU
 SET MERRY =1 --MERRY를 1로 바꿔라
 WHERE STUNAME='신희태';
 
 UPDATE JSSTU
 SET MERRY =0 --MERRY를 1로 바꿔라
 WHERE STUNAME='안재현';
 
UPDATE JSSTU
 SET MERRY =0 --MERRY를 1로 바꿔라
 WHERE STUNAME='차호정';

SELECT *
FROM JSSTU
WHERE MERRY IS NOT NULL;





--3년뒤에 25살인 사람 출력 
SELECT*
FROM JSSTU
WHERE STUAGE +3 = 25;


