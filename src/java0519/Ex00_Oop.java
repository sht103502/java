package java0519;

public class Ex00_Oop {

	public static void main(String[] args) {
		//객체 지향프로그래밍
		/*
		 OOP(Object-Oriented-Programming))
		 
		 프로그래밍 하기 위해 단위(객체)로 잘게나눠서 코딩
		 다시 이것들을 조립해서 복잡한 프로그램을 만드는 것
		 
		 절차지향: 순서대로 진행되는 프로그램
		 		ex)급식소에서 줄을 서서 먹는 것
		 		맞춤옷 : 원하는 형태로 만들어서 입는 것
		 
		 객체지향 : 객체(클래스)라는 작은 단위로 프로그래밍 하는 것
		 		ex) 뷔페에서 내가 원하는 음식을 가져와서 먹는 것 
		 		기성옷: 내몸에 맞는 것을 골라 입는 것
		 단점 : 불필요한 메모리가 생길수 있음
		 
		 객체 모델링 ( Object Modeling)
		 현실 세계의 객체를 소프트웨어 객체로 설계하는 것
		 
		 클래스 - 객체 비교
		 
		 클래스 : 설계도
		 객체를 정의해 놓은 것, 객체를 만들기 위한 것
		 커피머신, 토스트 설계도
		 
		 객체 : 실제로 존재하는 사물이나 개념 
		 클래스 모양 그대로 생성된 실체
		 커피,토스트,스마트폰
		 자신만의 고유한 특성과 행동을 가지며, 다른 객체들과 상호작용을 한다.
		 클래스에서는 인스턴스(instance) 라고 부른다.
		 
		 객체 특성 3가지
		 1)캡슐화(Encapsulation): 정보은닉 
		 2)상속(Inheritance):	부모-자식
		 3)다형성(Polymorphism): 상속에서 사용, 같은 코드 - 다른출력
		 
		 클래스의 3요소
		 
		 (접근제어자) class클래스명{
		 필드정의;
		 생성자 정의;
		 메소드 정의;
		 }
		 */
	}

}
